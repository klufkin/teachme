#!/usr/bin/env bash

# The command's name
echo -e 'git log'

# the command's description
echo "git log allows you to look back at a repository's commit history. It lists all the commits made in that repository in reverse chronological order – meaning the most recent commits show up first. By default the command lists each commit with its SHA-1 checksum(the cyrptographic hash used to identify the commit, simply the commit id number), the author’s name and email, the date written, and the commit message. There are a large variety of options for presenting commit information through the use of flags."

echo "------------"

# the command's syntax
echo "Syntax:"
echo
echo "git log"
echo
echo "git log --graph"
echo -e "\t--graph: Enable git log to show the commit history in a graph."
echo
echo "git log --after=\"yesterday\""
echo -e "\t--after: Enable git log to show only the commits after a specific date."
echo
echo "git log --before=\"yesterday\""
echo -e "\t--after: Enable git log to show only the commits before a specific date."
echo
echo "git log --after=\"2016-3-2\"  --before=\"2016-3-5\""
echo -e "\t--before: Enable git log to show only the commits after a specific date."
echo -e "\t--after: Enable git log to show only the commits before a specific date."
echo
echo "git log -3"
echo -e "\t-3: The number of outputs git log will display."

echo "------------"

# the command's usage examples
# example 1
echo "git test"
echo description here

# example 2
echo "git test something"
echo description here


exit 0
