#!/usr/bin/env bash

# The command's name
echo -e 'git branch'

# the command's description
echo "In git, a branch represents an isolated line where development can take place. What this mean is that a branch provides a brand new working directory, staging area, and project history. The branch feature is useful for developers who wants to develop a new feature for their application but does not want to mess with the actual code that is running in their production server.

git branch is a command that lets you create, delete, list and rename branches. It does not let you switch between branches however, use git checkout instead."

echo "------------"

# the command's syntax
echo "Syntax:"
echo "git test argument1 argument2"
echo -e "\targument1: description of argument 1"
echo -e "\targument2: description of argument 2"
#   ...      etc

echo "------------"

# the command's usage examples
# example 1
echo "git branch"
echo "List all the current branches in your repository"

# example 2
echo "git branch testing"
echo "Will create a branch named 'testing'"

# example 3
echo "git branch -d testing"
echo "Will delete the branch named 'testing'. If the branch has unmerged changes it will not be deleted."

# example 4
echo "git branch -D testing"
echo "-D executes a force delete on branch 'testing'. This means the branch will be deleted even if it has unmerged changes. This command will permanently throw away all of the commits associated with that line of development."

# example 5
echo "git branch -m awesome"
echo "This will rename the current branch to 'awesome'"


exit 0
