#!/usr/bin/env bash

# The command's name
echo -e 'git checkout'

# the command's description
echo "The git checkout command lets you navigate between the branches created by git branch. Checking out a branch updates the files in the working directory to match the version stored in that branch, and it tells Git to record all new commits on that branch.

git checkout works hand-in-hand with git branch. When you want to start a new feature, you create a branch with git branch, then check it out with git checkout. You can work on multiple features in a single repository by switching between them with git checkout."

echo "------------"

# the command's syntax
echo "Syntax:"
echo
echo "git checkout new_branch"
echo -e "\tnew_branch: The specified branch for git to checkout."
echo
echo "git checkout -b new_branch"
echo -e "\t-b: Tells git to run \033[4mgit branch new_branch\033[0m before checkout."
echo -e "\tnew_branch: The specified branch for git to checkout."
echo
echo "git checkout master~2 file.txt"
echo -e "\tmaster~2: Tells git checkout to use the master branch two revisions back."
echo -e "\tfile.txt: The specified file for git to revert or checkout to two revisions back."


echo "------------"

# the command's usage examples
# example 1
echo "git test"
echo description here

# example 2
echo "git test something"
echo description here


exit 0
